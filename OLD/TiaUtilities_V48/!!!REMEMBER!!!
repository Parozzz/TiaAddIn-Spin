The reason why classes has been implemented this way (So not without an abstract class or an interface) is because they are though both for parsing the XML and Genrating it.
If i change the structure of the code to support a more OOP approach with inheritance, i will break this proposition.

The SimaticML library is just a PURELY EDITORIAL to easier creation of xmls. It does not checks or controls for you.
When parsing the file, there will be no checks for validity (Other than basics one, like for required parts) because importing a file is supposed to be directly exported from TIA and to be valid.
(N.B. THE LIBRARY SHOULD NOT MODIFY THE BLOCK WHEN BEEN CREATED FROM PARSING A FILE! IF IT DOES IS AN ERROR! Not including methods like Init that are an helping hand).