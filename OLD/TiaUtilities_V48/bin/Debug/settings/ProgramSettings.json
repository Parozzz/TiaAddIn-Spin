{
  "lastDBDuplicationFileName": "",
  "DBDuplicationNewMemberName": "{replacement1}{replacement2}{replacement3}",
  "DBDuplicationReplaceDBName": false,
  "DBDuplicationStartingNum": 1000,
  "DBDuplicationNewDBName": "{replacement1}{replacement2}{replacement3}",
  "TimedSaveTime": 60,
  "lastTIAVersion": 19,
  "ietfLanguage": "it-IT",
  "GridSettings": {
    "DragSelectedCellBorderColor": "255, 255, 128",
    "SingleSelectedCellBorderColor": "64, 128, 128",
    "SelectedCellTriangleColor": "Green",
    "PreviewColor": "MediumPurple",
    "GridFont": "Microsoft Sans Serif, 8.25pt"
  },
  "IOSettings": {
    "IOConfiguration": {
      "FCBlockName": "fcTest_IO",
      "FCBlockNumber": 195,
      "MemoryType": 0,
      "GroupingType": 1,
      "DBName": "GenIO",
      "DBNumber": 250,
      "VariableTableName": "VariableTable",
      "VariableTableInputStartAddress": 100,
      "VariableTableOutputStartAddress": 200,
      "VariableTableSplitEvery": 250,
      "IOTableName": "IOTags",
      "IOTableSplitEvery": 250,
      "DefaultIoName": "{memory_type}{byte}_{bit}",
      "DefaultDBInputVariable": "{config_db_name}.IN.{io_name}",
      "DefaultDBOutputVariable": "{config_db_name}.OUT.{io_name}",
      "DefaultMerkerInputVariable": "MI_{io_name}",
      "DefaultMerkerOutputVariable": "MO_{io_name}",
      "SegmentNameBitGrouping": "{memory_type}{byte}_{bit} - {comment}",
      "SegmentNameByteGrouping": "{memory_type}B{byte}"
    },
    "ExcelImportConfiguration": {
      "AddressCellConfig": "$A",
      "IONameCellConfig": "$I",
      "CommentCellConfig": "$E $F $G $H (P$K - $O)",
      "StartingRow": 2,
      "IgnoreRowExpressionConfig": "$A != \"\"",
      "JSScript": ""
    },
    "JSScript": "address = address.replace(\"E\", \"I\"); \r\naddress = address.replace(\"A\", \"Q\"); \r\n//ioName  = ioName.replace(\"E\", \"I\");\r\n//ioName  = ioName.replace(\"A\", \"Q\");\r\n\r\nif (comment.toLowerCase().includes(\"scorta\") || comment.startsWith(\" \"))\r\n{\r\n    ioName = address.replace(\".\", \"_\") + \"_SCORTA\";\r\n}\r\n\r\nlog(\"Row[\" + row + \"]. Suggestions=\" + JSON.stringify(suggestions));\r\nlog(JSON.stringify(this));",
    "SuggestionJSScript": ""
  },
  "AlarmSettings": {
    "Configuration": {
      "FCBlockName": "fcAlarmGeneration",
      "FCBlockNumber": 100,
      "CoilFirst": true,
      "PartitionType": 1,
      "GroupingType": 0,
      "StartingAlarmNum": 1000,
      "AlarmNumFormat": "000.###",
      "AntiSlipNumber": 0,
      "SkipNumberAfterGroup": 0,
      "GenerateEmptyAlarmAntiSlip": false,
      "EmptyAlarmAtEnd": 0,
      "EmptyAlarmContactAddress": "FALSE",
      "EmptyAlarmTimerAddress": "\\",
      "EmptyAlarmTimerType": "TON",
      "EmptyAlarmTimerValue": "T#0s",
      "DefaultCoilAddress": "Alm.Act.Alm{alarm_num}",
      "DefaultSetCoilAddress": "Alm.Mem.Alm{alarm_num}",
      "DefaultTimerAddress": "AlmTimers.Alm[{alarm_num}]",
      "DefaultTimerType": "TON",
      "DefaultTimerValue": "T#0s",
      "AlarmAddressPrefix": "{device_address}.",
      "CoilAddressPrefix": "",
      "SetCoilAddressPrefix": "",
      "TimerAddressPrefix": "",
      "OneEachSegmentName": "Alm{alarm_num} - {device_description} {alarm_description}",
      "OneEachEmptyAlarmSegmentName": "Alm{alarm_num} - SPARE",
      "GroupSegmentName": "Alm{alarm_num_start} ~ {alarm_num_end} - {device_description}",
      "GroupEmptyAlarmSegmentName": "Alm{alarm_num_start} ~ {alarm_num_end} - SPARE",
      "AlarmTextInList": "{device_name} - {alarm_description}",
      "EmptyAlarmTextInList": "{device_name} - SPARE"
    },
    "DeviceJSScript": "",
    "AlarmJSScript": ""
  }
}